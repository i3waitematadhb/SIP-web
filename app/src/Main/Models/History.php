<?php

namespace {

    use SilverStripe\Forms\CheckboxField;
    use SilverStripe\Forms\HiddenField;
    use SilverStripe\Forms\ReadonlyField;
    use SilverStripe\Forms\TextField;
    use SilverStripe\ORM\DataObject;
    use SilverStripe\Security\Member;

    class History extends DataObject
    {
        private static $default_sort = 'Sort ASC';

        private static $db = [
            'Name'                   => 'Varchar',
            'PeriodID'               => 'Int',
            'StartDate'              => 'Date',
            'EndDate'                => 'Date',
            'ClinicalModule'         => 'Varchar',
            'ClinicalModuleID'       => 'Int',
            'PrescribingIndicator'   => 'Varchar',
            'PrescribingIndicatorID' => 'Int',
            'Archived'               => 'Boolean',
            'Sort'                   => 'Int'
        ];

        private static $has_one = [
            'Member' => Member::class
        ];

        private static $summary_fields = [
            'Name' => 'Period',
            'ClinicalModule'       => 'Clinical module',
            'PrescribingIndicator' => 'Prescribing indicator',
            'Status'
        ];

        public function getCMSFields()
        {
            $fields = parent::getCMSFields(); // TODO: Change the autogenerated stub
            $fields->removeByName('MemberID');
            $fields->addFieldToTab('Root.Main', ReadonlyField::create('MemberRO', 'Member', $this->Member()->FirstName . ' ' . $this->Member()->LastName));
            $fields->addFieldToTab('Root.Main', ReadonlyField::create('Name'));
            $fields->addFieldToTab('Root.Main', HiddenField::create('PeriodID'));
            $fields->addFieldToTab('Root.Main', TextField::create('StartDate'));
            $fields->addFieldToTab('Root.Main', TextField::create('EndDate'));
            $fields->addFieldToTab('Root.Main', ReadonlyField::create('ClinicalModule'));
            $fields->addFieldToTab('Root.Main', HiddenField::create('ClinicalModuleID'));
            $fields->addFieldToTab('Root.Main', ReadonlyField::create('PrescribingIndicator'));
            $fields->addFieldToTab('Root.Main', HiddenField::create('PrescribingIndicatorID'));
            $fields->addFieldToTab('Root.Main', CheckboxField::create('Archived'));
            $fields->addFieldToTab('Root.Main', HiddenField::create('Sort'));

            return $fields;
        }

        public function getPeriodReadable()
        {
            $period = ModulePeriod::get()->byID($this->PeriodID());
        }

        public function getStatus()
        {
            if($this->Archived == 1) return _t('GridField.Archived', 'Archived');
            return _t('GridField.Live', 'Live');
        }
    }
}
